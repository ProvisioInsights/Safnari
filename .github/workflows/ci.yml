name: CI
permissions:
  contents: write

on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - run: make lint
      - run: make test

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make build
      - uses: actions/upload-artifact@v4
        with:
          name: safnari-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/safnari-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: bin
      - name: Compute release tag
        id: release_tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: |
          date=$(date -u +%Y%m%d)
          count=$(gh release list --limit 100 --json tagName \
            | jq --arg date "$date" '[.[] | select(.tagName | startswith("safnari-" + $date))] | length')
          letter=$(printf '%b' "$(printf '\\%03o' $((97 + count)))")
          echo "tag=safnari-${date}${letter}" >> "$GITHUB_OUTPUT"
      - name: Release on tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: bin/**
      - name: Release on main
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: bin/**
          tag_name: ${{ steps.release_tag.outputs.tag }}
          name: ${{ steps.release_tag.outputs.tag }}
